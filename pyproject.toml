[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"


[project]
dynamic = ["version", "readme"]
name = "doc2dash"
authors = [{ name = "Hynek Schlawack", email = "hs@ox.cx" }]
requires-python = ">=3.8"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development",
    "Topic :: Text Processing",
]
dependencies = [
    "Sphinx",
    "attrs>=21.3",
    "beautifulsoup4",
    "click",
    "colorama; platform_system=='Windows'",
]

[project.optional-dependencies]
tests = ["coverage[toml]", "pytest"]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-include-markdown-plugin",
    "mkdocs-click",
]
typing = ["mypy", "types-urllib3"]
dev = ["doc2dash[tests,docs,typing]"]

[project.scripts]
doc2dash = "doc2dash.__main__:main"

[project.urls]
Documentation = "https://doc2dash.readthedocs.io/"
Changelog = "https://doc2dash.readthedocs.io/en/stable/changelog.html"
"Source Code" = "https://github.com/hynek/doc2dash"
Funding = "https://github.com/sponsors/hynek"
Ko-fi = "https://ko-fi.com/the_hynek"


[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "no-guess-dev" }


[tool.pytest.ini_options]
addopts = ["-ra", "--strict-markers", "--strict-config"]
xfail_strict = true
testpaths = "tests"
filterwarnings = ["once::Warning"]


[tool.coverage.run]
parallel = true
branch = true
source = ["doc2dash"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    # typing-related code
    "^if (False|TYPE_CHECKING):",
    ": \\.\\.\\.$",
    "^ +\\.\\.\\.$",
    "-> ['\"]?NoReturn['\"]?:",
]

[tool.mypy]
show_error_codes = true

check_untyped_defs = true
# disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
# disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "normal"
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
# warn_return_any = true
warn_unused_ignores = true


[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "conftest.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "doc2dash.__main__"
ignore_errors = true


[tool.black]
line-length = 79


[tool.isort]
profile = "attrs"


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = "# doc2dash\n"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-after = "<!-- begin-short -->\n"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """


## Release Information for """

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "<!-- changelog follows -->"
pattern = "## ([^\n]+?\n\n)###"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "<!-- changelog follows -->"
pattern = "\n(###.+?\n)## "

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = "\n## Credits\n"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "AUTHORS.md"
start-after = "# Authors\n"
