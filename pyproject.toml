[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"


[project]
dynamic = ["version", "readme"]
name = "doc2dash"
description = "Convert docs to the docset format."
authors = [{ name = "Hynek Schlawack", email = "hs@ox.cx" }]
requires-python = ">=3.8"
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
]
dependencies = ["attrs>=21.3", "beautifulsoup4", "click>8", "rich"]

[project.optional-dependencies]
tests = ["coverage[toml]", "pytest"]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-include-markdown-plugin",
    "mkdocs-click",
    "mkdocstrings[python]",
]
typing = ["mypy", "types-urllib3"]
dev = ["doc2dash[tests,typing]"]

[project.scripts]
doc2dash = "doc2dash.__main__:main"

[project.urls]
Documentation = "https://doc2dash.hynek.me/"
Changelog = "https://github.com/hynek/doc2dash/blob/main/CHANGELOG.md"
GitHub = "https://github.com/hynek/doc2dash"
Funding = "https://github.com/sponsors/hynek"
Mastodon = "https://mastodon.social/@hynek"
Twitter = "https://twitter.com/hynek"


[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }


[tool.pytest.ini_options]
addopts = ["-ra", "--strict-markers", "--strict-config"]
xfail_strict = true
testpaths = "tests"
filterwarnings = ["once::Warning"]


[tool.coverage.run]
parallel = true
branch = true
source = ["doc2dash"]

[tool.coverage.paths]
source = ["src", ".nox/tests-*/**/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    # typing-related code
    "^if (False|TYPE_CHECKING):",
    ": \\.\\.\\.$",
    "^ +\\.\\.\\.$",
    "-> ['\"]?NoReturn['\"]?:",
]


[tool.interrogate]
verbose = 2
fail-under = 100
whitelist-regex = ["test_.*"]


[tool.mypy]
strict = true

show_error_codes = true
enable_error_code = ["ignore-without-code"]

ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "noxfile"
disallow_untyped_decorators = false


[tool.black]
line-length = 79


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = "# doc2dash\n"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-after = "<!-- begin-short -->\n"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """


## Release Information for """

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "<!-- changelog follows -->"
pattern = "## ([^\n]+?\n\n)###"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "<!-- changelog follows -->"
pattern = "\n(###.+?\n)## "

[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]
pattern = '\[(.+?)\]\(((?!https?://)\S+?.\.(png|gif))\)'
replacement = '[\1](https://raw.githubusercontent.com/hynek/doc2dash/main/\g<2>)'


[tool.ruff]
src = ["src", "tests", "noxfile.py"]
select = [
    "E",   # pycodestyle
    "W",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "DTZ", # flake8-datetimez
    "I",   # isort
    "PGH", # pygrep-hooks
    "PLC", # Pylint
    "PIE", # flake8-pie
    "RUF", # ruff
]
ignore = [
    "RUF001", # leave my smart characters alone
    "S101",   # assert
    "SIM300", # Yoda rocks in asserts
]

[tool.ruff.isort]
lines-between-types = 1
lines-after-imports = 2
