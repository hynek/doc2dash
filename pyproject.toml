[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"


[project]
dynamic = ["version", "readme"]
name = "doc2dash"
description = "Convert docs to the docset format."
authors = [{ name = "Hynek Schlawack", email = "hs@ox.cx" }]
requires-python = ">=3.10"
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Software Development :: Documentation",
]
dependencies = ["attrs>=23.2", "beautifulsoup4", "click>8", "rich"]

[dependency-groups]
tests = ["coverage[toml]", "pytest"]
docs = [
  "mkdocs",
  "mkdocs-material",
  "mkdocs-include-markdown-plugin",
  "mkdocs-click",
  "mkdocs-callouts",
  "mkdocstrings[python]",
]
typing = ["mypy", "types-urllib3"]
dev = [{ include-group = "tests" }, { include-group = "typing" }, "nox"]


[project.scripts]
doc2dash = "doc2dash.__main__:main"

[project.urls]
Documentation = "https://doc2dash.hynek.me/"
Changelog = "https://github.com/hynek/doc2dash/blob/main/CHANGELOG.md"
GitHub = "https://github.com/hynek/doc2dash"
Funding = "https://github.com/sponsors/hynek"
Mastodon = "https://mastodon.social/@hynek"
Twitter = "https://twitter.com/hynek"


[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }


[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--strict-markers",
  "--strict-config",
  "--import-mode=importlib",
]
xfail_strict = true
testpaths = "tests"
filterwarnings = ["once::Warning"]


[tool.coverage.run]
parallel = true
branch = true
source = ["doc2dash"]

[tool.coverage.paths]
source = ["src", ".nox/tests-*/**/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "raise NotImplementedError",
  # typing-related code
  "^if (False|TYPE_CHECKING):",
  ": \\.\\.\\.$",
  "^ +\\.\\.\\.$",
  "-> ['\"]?NoReturn['\"]?:",
]


[tool.interrogate]
verbose = 2
fail-under = 100
whitelist-regex = ["test_.*"]


[tool.mypy]
strict = true

show_error_codes = true
enable_error_code = ["ignore-without-code"]

ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "noxfile"
disallow_untyped_decorators = false


[tool.ruff]
src = ["src", "tests", "noxfile.py"]
line-length = 79

[tool.ruff.lint]
ignore = [
  "A001",    # shadowing is fine
  "ANN",     # Mypy is better at this
  "ARG",     # unused arguments are normal when implementing interfaces
  "COM",     # Formatter takes care of our commas
  "D",       # We prefer our own docstring style.
  "E501",    # leave line-length enforcement to formatter
  "FBT",     # we have one function that takes one bool; c'mon!
  "FIX",     # Yes, we want XXX as a marker.
  "INP001",  # sometimes we want Python files outside of packages
  "ISC001",  # conflicts with formatter
  "PLR0913", # yes, many arguments, but most have defaults
  "PLR2004", # numbers are sometimes fine
  "PYI034",  # We're not adding typing_extensions just for Self.
  "RUF001",  # leave my smart characters alone
  "SLF001",  # private members are accessed by friendly functions
  "TCH",     # TYPE_CHECKING blocks break autodocs
  "TD",      # we don't follow other people's todo style
]

[tool.ruff.lint.per-file-ignores]
"**/test_*" = [
  "ARG005", # we need stub lambdas
  "S101",   # assert
  "SIM300", # Yoda rocks in asserts
  "PT005",  # we always add underscores and explicit names
  "PT011",  # broad is fine
  "TRY002", # stock exceptions are fine in tests
  "EM101",  # no need for exception msg hygiene in tests
]

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = "# doc2dash\n"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-after = "<!-- begin-short -->\n"
end-before = "## Project Links"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-at = "## Credits"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """


## Release Information

"""

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "<!-- changelog follows -->"
pattern = "\n(###.+?\n)## "

[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]
pattern = '\[(.+?)\]\(((?!https?://)\S+?.\.(png|gif))\)'
replacement = '[\1](https://raw.githubusercontent.com/hynek/doc2dash/main/\g<2>)'

[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]
# Transform GitHub callouts into bolded text.
# https://github.com/orgs/community/discussions/16925
pattern = '\[!(NOTE|TIP|IMPORTANT|WARNING|CAUTION)\]'
replacement = '**\1**:'
