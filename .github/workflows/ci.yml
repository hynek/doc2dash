---
name: CI

on:
  pull_request:
  merge_group:
  push:
    branches: [main]
  workflow_dispatch:

env:
  FORCE_COLOR: "1" # Make tools pretty.
  SETUPTOOLS_SCM_PRETEND_VERSION: "1.0" # avoid warnings about shallow checkout
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

permissions: {}

jobs:
  tests:
    name: Nox on ${{ matrix.runs-on }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        python-version:
          - "pypy3.10"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        runs-on: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
          cache: pip

      - name: Install dependencies
        run: python -Im pip install --upgrade wheel nox

      - run: nox --python ${{ matrix.python-version }}
        if: runner.os == 'Linux'

      - run: nox --python ${{ matrix.python-version }} -e tests
        if: runner.os == 'Windows'

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.runs-on }}-${{ matrix.python-version }}
          path: .coverage.*
          if-no-files-found: ignore
        if: runner.os == 'Linux'

  coverage:
    name: Combine & check coverage
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version-default
          cache: pip

      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine coverage & fail if it's <100%.
        run: |
          python -Im pip install --upgrade coverage[toml]

          python -Im coverage combine
          python -Im coverage html --skip-covered --skip-empty

          # Report and write to summary.
          python -Im coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

          # Report again and fail if under 100%.
          python -Im coverage report --fail-under=100

      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
        if: ${{ failure() }}


  install-dev:
    name: Verify dev env
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version-default
          cache: pip

      - run: python -Im pip install -e .[dev]
      - run: python -c 'import doc2dash; print(doc2dash.__title__)'
      - run: python -Im doc2dash --version

  required-checks-pass:
    name: Ensure everything required is passing for branch protection
    if: always()

    needs:
      - tests
      - coverage
      - install-dev

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
